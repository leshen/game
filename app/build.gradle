apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
def dbflow_version = "4.1.2"
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "game.shenle.com"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        flavorDimensions "versionCode"
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '28.0.3'
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        // ... and any other excludes go here
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"

    // Use if Kotlin user.
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"

    // 隔开
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"

    // 隔开
    implementation "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"

    // 隔开
    implementation "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:${dbflow_version}"
    //Bmob的数据存储、文件等服务，以下是最新的bmob-sdk:
    implementation 'cn.bmob.android:bmob-sdk:3.7.3-rc1'
    //如果你想应用能够兼容Android6.0，请添加此依赖(org.apache.http.legacy.jar)
    implementation 'cn.bmob.android:http-legacy:1.0'
//    api "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    kapt 'com.google.dagger:dagger-compiler:2.23.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.23.1'
    api 'com.google.dagger:dagger:2.23.1'
    api 'com.google.dagger:dagger-android:2.23.1'
    api 'com.google.dagger:dagger-android-support:2.23.1'
    // if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.23.1'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.23.1'
    api 'android.arch.lifecycle:runtime:1.1.1'
    api 'android.arch.lifecycle:extensions:1.1.1'
    kapt "android.arch.lifecycle:compiler:1.1.1"
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
    api 'android.arch.persistence.room:runtime:1.1.1'
    kapt "android.arch.persistence.room:compiler:1.1.1"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    implementation 'skin.support:skin-support:3.1.1'                   // skin-support 基础控件支持
    implementation 'skin.support:skin-support-design:3.1.1'            // skin-support-design material design 控件支持[可选]
    implementation 'skin.support:skin-support-cardview:3.1.1'          // skin-support-cardview CardView 控件支持[可选]
    implementation 'skin.support:skin-support-constraint-layout:3.1.1' // skin-support-constraint-layout ConstraintLayout 控件支持[可选]
    api 'com.github.anzaizai:EasySwipeMenuLayout:1.1.4'
    //沉浸式状态栏
    api 'com.zhangmonke:ImmerseLayout:1.1.1'
    //AutofitTextView
    api 'me.grantland:autofittextview:0.2.1'
    //ProgressBar
    api 'com.zhangmonke:MProgressBar:1.0.1'
    //CircleImageView
    api 'de.hdodenhof:circleimageview:3.0.0'
    //SwitchButton
    api 'com.kyleduo.switchbutton:library:1.4.4'
    api 'com.victor:lib:1.0.4'
    implementation project(':leshenlib')
    implementation files('libs/utdid4all-1.0.4.jar')
    implementation files('libs/juniversalchardet-1.0.3.jar')
}
kapt {
    generateStubs = true
}
afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--multi-dex'
        dx.additionalParameters += "--main-dex-list=$projectDir/<mainDex>".toString()
    }
}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}
